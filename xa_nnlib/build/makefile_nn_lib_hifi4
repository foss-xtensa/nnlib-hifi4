#
# Copyright (c) 2018-2024 Cadence Design Systems, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to use this Software with Cadence processor cores only and
# not with any other processors and platforms, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#


.PHONY: all install clean

ROOTDIR = ..

ifeq ($(BUILD_SCRATCH_SIZE_LIB), 1)
CODEC_NAME = nnlib_scratch_size_api_hifi4
else
CODEC_NAME = nnlib
endif

CFLAGS += \
      -DMODEL_INT16 \
      -DNNLIB_V2 \

CFLAGS += -Dhifi4

ifeq ($(DISABLE_ARG_CHK), 1)
CFLAGS += -DDISABLE_ARG_CHK
endif

ifneq ($(DISABLE_ACT_TIE), 1)
CFLAGS += -DUSE_HIFI_ACT_TIE
endif

ifeq ($(SINGLE_ROUNDING), 1)
CFLAGS += -DTFLITE_SINGLE_ROUNDING=1
else
CFLAGS += -DTFLITE_SINGLE_ROUNDING=0
endif

vpath %.c $(ROOTDIR)/algo/kernels/matXvec/hifi4
vpath %.c $(ROOTDIR)/algo/kernels/activations/hifi4
vpath %.c $(ROOTDIR)/algo/kernels/basic/hifi4
vpath %.c $(ROOTDIR)/algo/kernels/cnn/hifi4
vpath %.c $(ROOTDIR)/algo/kernels/fc/hifi4
vpath %.c $(ROOTDIR)/algo/kernels/pool/hifi4
vpath %.c $(ROOTDIR)/algo/ndsp/hifi4/src
vpath %.c $(ROOTDIR)/algo/layers/gru/src
vpath %.c $(ROOTDIR)/algo/layers/lstm/src
vpath %.c $(ROOTDIR)/algo/layers/cnn/src
vpath %.c $(ROOTDIR)/algo/common/src
vpath %.c $(ROOTDIR)/algo/kernels/norm/hifi4
vpath %.c $(ROOTDIR)/algo/kernels/reorg/hifi4
vpath %.cpp $(ROOTDIR)/algo/common/src

MATXVECO2OBJS = \
    xa_nn_matXvec_8x8.o \
    xa_nn_matXvec_16x8.o \
    xa_nn_matXvec_8x16.o \
    xa_nn_matXvec_16x16.o \
    xa_nn_matXvec_asym8xasym8.o \
    xa_nn_matXvec_sym8sxasym8s.o \
    xa_nn_matXvec_sym8sxsym16s.o \
    xa_nn_matXvec_asym8sxasym8s.o \
    xa_nn_matXvec_asym4sxasym8s.o \
    xa_nn_matXvec_asym8xasym8_batch.o \
    xa_nn_matXvec_8x8_batch.o \
    xa_nn_matXvec_8x16_batch.o \
    xa_nn_matXvec_16x16_batch.o \
    xa_nn_matXvec_f32.o \
    xa_nn_matXvec_f32_batch.o \
    xa_nn_matmul_8x8.o \
    xa_nn_matmul_8x16.o \
    xa_nn_matmul_16x16.o \
    xa_nn_matmul_f32.o \
    xa_nn_matmul_asym8xasym8.o \
    xa_nn_matmul_sym8sxasym8s.o \
    xa_nn_matmul_asym4sxasym8s.o \
    xa_nn_matmul_sym8sxsym16s.o \
    xa_nn_matmul_asym8sxasym8s.o

ACTIVATIONSO2OBJS = \
  xa_nn_activations_f32_f32.o \
  xa_nn_activations_32_8.o \
  xa_nn_activations_32_16.o \
  xa_nn_activations_asym8_asym8.o\
  xa_nn_softmax_asym8_asym8.o \
  xa_nn_activations_8_8.o \
  xa_nn_activations_16_16.o \
  xa_nn_activations_asym16_asym16.o \
  xa_nn_activations_sym16_sym16.o \
  xa_nn_softmax_sym16s_16.o


NDSPO2OBJS = \
  expf_tbl.o \
  inff_tbl.o \
  nanf_tbl.o \
  pow2f_tbl.o \
  scl_sigmoidf_hifi4.o \
  scl_tanhf_hifi4.o \
  tanhf_tbl.o \
  vec_alognf_hifi4.o \
  vec_reluf_hifi4.o \
  vec_sigmoidf_hifi4.o \
  vec_softmaxf_hifi4.o \
  vec_tanhf_hifi4.o \
  lognf_tbl.o \
  sinf_tbl.o \
  inv2pif_tbl.o \
  sqrt2f_tbl.o \
  vec_sinef_hifi4.o \
  vec_cosinef_hifi4.o \
  vec_lognf_hifi4.o \


CONVO2OBJS = \
    xa_nn_conv1d_std_8x16.o \
    xa_nn_conv1d_std_8x8.o \
    xa_nn_conv1d_std_16x16.o \
    xa_nn_conv1d_std_asym8xasym8.o \
    xa_nn_conv1d_std_f32.o \
    xa_nn_conv1d_std_circ_buf.o \
    xa_nn_matXvec_8x16_16_circ_nb.o \
    xa_nn_matXvec_8x8_8_circ_nb.o \
    xa_nn_matXvec_16x16_16_circ_nb.o \
    xa_nn_matXvec_asym8xasym8_asym8_circ_nb.o \
    xa_nn_matXvec_f32_circ_nb.o \
    xa_nn_conv2d_std_8x16.o \
    xa_nn_conv2d_std_8x8.o \
    xa_nn_conv2d_std_16x16.o \
    xa_nn_conv2d_std_asym8xasym8.o \
    xa_nn_conv2d_std_sym8sxasym8s.o \
    xa_nn_conv2d_std_sym4sxasym8s.o \
	  xa_nn_conv2d_sym8sxasym8s.o \
	  xa_nn_conv2d_std_f32.o \
    xa_nn_conv2d_std_circ_buf.o \
    xa_nn_matXvec_8x16_16_circ.o \
    xa_nn_matXvec_8x8_8_circ.o \
    xa_nn_matXvec_16x16_16_circ.o \
    xa_nn_matXvec_asym8xasym8_asym8_circ.o \
    xa_nn_matXvec_sym8sxasym8s_asym8s_circ.o \
    xa_nn_matXvec_f32_circ.o \
    xa_nn_circ_buf.o \
    xa_nn_conv2d_depthwise.o \
    xa_nn_conv2d_depthwise_16x16.o \
    xa_nn_conv2d_pointwise_16x16.o \
    xa_nn_conv2d_depthwise_8x16.o \
    xa_nn_conv2d_pointwise_8x16.o \
    xa_nn_conv2d_depthwise_8x8.o \
    xa_nn_conv2d_pointwise_8x8.o \
    xa_nn_conv2d_depthwise_asym8xasym8.o \
    xa_nn_conv2d_pointwise_asym8xasym8.o \
    xa_nn_conv2d_depthwise_sym8sxasym8s.o \
    xa_nn_conv2d_pointwise_sym8sxasym8s.o \
    xa_nn_conv2d_depthwise_sym8sxsym16s.o \
    xa_nn_conv2d_depthwise_f32.o \
    xa_nn_conv2d_pointwise_f32.o \
    xa_nn_conv2d_std_sym8sxsym16s.o \
    xa_nn_conv2d_sym8sxsym16s.o \
    xa_nn_conv2d_pointwise_sym8sxsym16s.o \
    xa_nn_matXvec_sym8sxsym16s_sym16s_circ.o \
    xa_nn_transpose_conv_circ_buf.o \
    xa_nn_transpose_conv_sym8sxasym8s.o \
    xa_nn_transpose_conv_sym8sxsym16s.o \
    xa_nn_transpose_conv_f32.o

FCO2OBJS = \
  xa_nn_fully_connected.o

POOLO2OBJS = \
    xa_nn_inv_256_tbl.o \
    xa_nn_avgpool.o \
    xa_nn_avgpool_8.o \
    xa_nn_avgpool_asym8.o \
    xa_nn_avgpool_16.o \
    xa_nn_avgpool_f32.o \
    xa_nn_maxpool.o \
    xa_nn_maxpool_8.o \
    xa_nn_maxpool_16.o \
    xa_nn_maxpool_asym8.o \
    xa_nn_maxpool_f32.o \
    xa_nn_maxpool_f32_nhwc.o\
    xa_nn_maxpool_asym8_nhwc.o\
    xa_nn_avgpool_f32_nhwc.o\
    xa_nn_avgpool_asym8_nhwc.o\
    xa_nn_maxpool_8_nhwc.o \
    xa_nn_maxpool_16_nhwc.o \
    xa_nn_avgpool_8_nhwc.o \
    xa_nn_avgpool_16_nhwc.o

GRUO2OBJS = \
    xa_nn_gru_api.o

LSTMO2OBJS = \
    xa_nn_lstm_api.o

CNNO2OBJS = \
    xa_nn_cnn_api.o

COMMONOSOBJS = \
  xa_nnlib_common_api.o


BASICOBJS = \
    xa_nn_vec_interpolation_q15.o \
    xa_nn_elm_mul_16x16.o \
    xa_nn_elm_mul_f32.o\
    xa_nn_elm_add_quant8.o\
    xa_nn_elm_mul_quant8.o\
    xa_nn_elm_mul_quant16.o\
    xa_nn_elm_sub_quant8.o\
    xa_nn_elm_minmax_8.o\
    xa_nn_elm_quantize.o\
    xa_nn_elm_add_f32.o \
    xa_nn_elm_sub_f32.o \
    xa_nn_elm_div_f32.o \
    xa_nn_elm_mul_acc_f32.o \
    xa_nn_floor_f32.o \
    xa_nn_dot_prod_16x16.o \
    xa_nn_elm_compare_quant8.o \
    xa_nn_memmove_16.o \
    xa_nn_reduce_asym8s_asym8s.o \
    xa_nn_reduce_asym16s_asym16s.o \
    xa_nn_elm_logical_bool.o \
    xa_nn_elm_sine_f32.o \
    xa_nn_elm_cosine_f32.o \
    xa_nn_elm_logn_f32.o \
    xa_nn_elm_abs_f32.o \
    xa_nn_elm_ceil_f32.o \
    xa_nn_elm_round_f32.o \
    xa_nn_elm_neg_f32.o \
    xa_nn_elm_square_f32.o \
    xa_nn_elm_rsqrt_f32.o \
    xa_nn_elm_sqrt_f32.o \
    xa_nn_memmove.o \
    xa_nn_broadcast_8_8.o \
    xa_nn_memset_f32.o \
    xa_nn_elm_sub_quant16.o \
    xa_nn_elm_add_quant16.o \
    xa_nn_elm_squared_diff_quant8.o \
    xa_nn_elm_squared_diff_quant16.o \
    xa_nn_lstm_utils.o

NORMO2OBJS = \
  xa_nn_l2_norm_f32.o \
  xa_nn_l2_norm_asym8s.o \
  xa_nn_batch_norm_8.o

REORGO2OBJS = \
  xa_nn_depth_to_space_8.o \
  xa_nn_space_to_depth_8.o \
  xa_nn_batch_to_space_nd_8.o \
  xa_nn_space_to_batch_nd_8.o \
  xa_nn_pad_8.o \
  xa_nn_pad_16.o \
  xa_nn_pad_32.o \
  xa_nn_stride_slice_int32.o \
  xa_nn_stride_slice_int16.o \
  xa_nn_stride_slice_int8.o \
  xa_nn_transpose_8.o \
  xa_nn_transpose_16.o \
  xa_nn_resize_bilinear_8.o \
  xa_nn_resize_nearest_neighbour_8.o \
  xa_nn_concat_8.o \
  xa_nn_split_v_8.o


ifeq ($(BUILD_SCRATCH_SIZE_LIB), 1)
CFLAGS += -DENABLE_SCRATCH_SIZE_API_ONLY 
LIBO2OBJS = \
  xa_nn_avgpool.o \
  xa_nn_maxpool.o \
  xa_nn_conv2d_std_circ_buf.o \
  xa_nn_conv2d_depthwise.o \
  xa_nn_circ_buf.o \
  xa_nn_transpose_conv_circ_buf.o \
  xa_nn_softmax_asym8_asym8.o \
  xa_nn_reduce_asym8s_asym8s.o
else
LIBO2OBJS = $(MATXVECO2OBJS) $(ACTIVATIONSO2OBJS) $(NDSPO2OBJS) $(CONVO2OBJS) $(FCO2OBJS) $(POOLO2OBJS) $(GRUO2OBJS) $(LSTMO2OBJS) $(CNNO2OBJS) $(BASICOBJS) $(NORMO2OBJS) $(REORGO2OBJS)
LIBOSOBJS = $(COMMONOSOBJS)
endif

INCLUDES = \
    -I$(ROOTDIR)/include \
    -I$(ROOTDIR)/include/nnlib \
    -I$(ROOTDIR)/algo/ndsp/hifi4/include \
    -I$(ROOTDIR)/algo/common/include

CFLAGS += \
        -ffunction-sections \
        
LIBLDFLAGS = -Wl,--gc-sections -Wl,--undefined=xa_nnlib_get_lib_name_string

ifeq ($(CC), xt-xcc)
  CFLAGS += -OPT:Olimit=12125
endif

ifeq ($(CPU), x86)
ifneq ($(BUILD_SCRATCH_SIZE_LIB), 1)
cfg_path = $(shell grep -w "config-prefix"  "$$XTENSA_SYSTEM/$$XTENSA_CORE"-params | awk -- '{ print $$3 }')
vpath %.c $(cfg_path)/src/cstub
LIBOSOBJS := $(shell find $(cfg_path)/src/cstub -name '*.c' | sed 's/.*cstub\///' | sed 's/\.c/\.o/')

INCLUDES += \
      -I$(cfg_path)/src/cstub

CFLAGS += -m32
LIBLDFLAGS += -m32
endif
endif

include $(ROOTDIR)/build/common.mk
